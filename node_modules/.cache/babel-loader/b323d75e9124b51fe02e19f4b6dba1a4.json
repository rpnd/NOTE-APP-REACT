{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\reza\\\\Desktop\\\\note-app\\\\react-note-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { nanoid } from 'nanoid';\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([{\n    id: nanoid(),\n    text: \"this is my first note!\",\n    data: \"15/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"this is my second note!\",\n    data: \"21/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"this is my third note!\",\n    data: \"28/04/2021\"\n  }, {\n    id: nanoid(),\n    text: \"this is my new note!\",\n    data: \"30/04/2021\"\n  }]);\n  const [searchText, setSearchText] = useState('');\n  const [darkMode, setDarkMode] = useState('false ');\n  useEffect(() => {\n    const savedNotes = JSON.parse(localStorage.getItem('react-notes-app-data'));\n\n    if (savedNotes) {\n      setNotes(savedNotes);\n    }\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('react-note-app-data', JSON.stringify(notes));\n  }, [notes]);\n\n  const addNote = text => {\n    const date = new Date();\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    };\n    const newNotes = [...notes, newNote];\n    setNotes(newNotes);\n  };\n\n  const deleteNote = id => {\n    const newNotes = notes.filter(note => note.id !== id);\n    setNotes(newNotes);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${darkMode && 'dark-mode'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleToggleDarkMode: setDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        handleSearchNote: setSearchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(NotesList, {\n        notes: notes.filter(note => note.text.toLowerCase().includes(searchText)),\n        handleAddNote: addNote,\n        handleDeleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }, this);\n};\n\n_s(App, \"m5xwApgVHmb6xvNSNLwQvzDecrs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/reza/Desktop/note-app/react-note-app/src/App.js"],"names":["useState","useEffect","nanoid","NotesList","Search","Header","App","notes","setNotes","id","text","data","searchText","setSearchText","darkMode","setDarkMode","savedNotes","JSON","parse","localStorage","getItem","setItem","stringify","addNote","date","Date","newNote","toLocaleDateString","newNotes","deleteNote","filter","note","toLowerCase","includes"],"mappings":"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","sourcesContent":["import { useState,useEffect } from \"react\";\nimport {nanoid} from 'nanoid';\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\nimport Header from \"./components/Header\";\nconst App =()=>{\nconst [notes, setNotes] = useState([\n{\nid:nanoid(),\n  text:\"this is my first note!\",\n  data:\"15/04/2021\"\n},\n{\n  id:nanoid(),\n    text:\"this is my second note!\",\n    data:\"21/04/2021\"\n  },\n  {\n    id:nanoid(),\n      text:\"this is my third note!\",\n      data:\"28/04/2021\"\n    },\n    {\n      id:nanoid(),\n        text:\"this is my new note!\",\n        data:\"30/04/2021\"\n      },\n]);\n\n\n\nconst[searchText, setSearchText]=useState('')\nconst[darkMode,setDarkMode]=useState('false ')\n\nuseEffect(() => {\n  const savedNotes=JSON.parse\n  (localStorage.getItem\n    ('react-notes-app-data')\n  );\n  if(savedNotes){\n    setNotes(savedNotes);\n  }\n}, []);\n\n   useEffect(() => {\n\n  localStorage.setItem(\n    'react-note-app-data',\n     JSON.stringify(notes)\n     );\n  }\n      , [notes]);\n\nconst addNote=(text)=>{\nconst date=new Date();\nconst newNote={\n  id:nanoid(),\n  text:text,\n  date:date.toLocaleDateString()\n}\nconst newNotes=[...notes,newNote];\nsetNotes(newNotes);\n}\nconst deleteNote=(id)=>{\n const newNotes= notes.filter((note)=>note.id !==id);\n setNotes(newNotes);\n}\n\n  return (<div className={`${darkMode && 'dark-mode'}`}>\n  <div className=\"container\">\n    <Header handleToggleDarkMode={setDarkMode}/>\n    <Search handleSearchNote={setSearchText}/>\n    <NotesList\n     notes={notes.filter((note)=>note.text.toLowerCase().includes(searchText))} \n     handleAddNote={addNote}\n    handleDeleteNote={deleteNote}\n    />\n  </div>\n  </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}